const { pool } = require("../config/database");

// T√≠nh to√°n tr·∫°ng th√°i d·ª±a tr√™n ng√†y th√°ng
function calculateStatus(issued_date, effective_date, expiry_date) {
  const today = new Date();
  today.setHours(0, 0, 0, 0); // Reset time to start of day

  // N·∫øu kh√¥ng c√≥ ng√†y c√≥ hi·ªáu l·ª±c v√† ng√†y h·∫øt hi·ªáu l·ª±c
  if (!effective_date && !expiry_date) {
    return "chua_xac_dinh";
  }

  // N·∫øu kh√¥ng c√≥ ng√†y c√≥ hi·ªáu l·ª±c
  if (!effective_date) {
    return "chua_xac_dinh";
  }

  const effectiveDate = new Date(effective_date);
  effectiveDate.setHours(0, 0, 0, 0);

  // N·∫øu ch∆∞a ƒë·∫øn ng√†y c√≥ hi·ªáu l·ª±c
  if (today < effectiveDate) {
    return "chua_hieu_luc";
  }

  // N·∫øu c√≥ ng√†y h·∫øt hi·ªáu l·ª±c
  if (expiry_date) {
    const expiryDate = new Date(expiry_date);
    expiryDate.setHours(0, 0, 0, 0);

    // N·∫øu ƒë√£ qua ng√†y h·∫øt hi·ªáu l·ª±c
    if (today > expiryDate) {
      return "het_hieu_luc";
    }
  }

  // N·∫øu ƒëang trong kho·∫£ng th·ªùi gian c√≥ hi·ªáu l·ª±c
  return "co_hieu_luc";
}

async function fixLegalDocumentsStatus() {
  try {
    console.log("üîÑ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t status cho legal_documents...");

    // L·∫•y t·∫•t c·∫£ legal documents
    const result = await pool.query(`
      SELECT id, issued_date, effective_date, expiry_date, status 
      FROM legal_documents 
      WHERE is_active = true
    `);

    console.log(`üìä T√¨m th·∫•y ${result.rows.length} b·∫£n ghi c·∫ßn c·∫≠p nh·∫≠t`);

    let updatedCount = 0;
    let errorCount = 0;

    for (const row of result.rows) {
      try {
        const newStatus = calculateStatus(
          row.issued_date,
          row.effective_date,
          row.expiry_date
        );

        // Ch·ªâ c·∫≠p nh·∫≠t n·∫øu status kh√°c v·ªõi status hi·ªán t·∫°i
        if (newStatus !== row.status) {
          await pool.query(
            `UPDATE legal_documents SET status = $1, ts_update = CURRENT_TIMESTAMP WHERE id = $2`,
            [newStatus, row.id]
          );
          updatedCount++;
          console.log(
            `‚úÖ C·∫≠p nh·∫≠t document ID ${row.id}: ${row.status} ‚Üí ${newStatus}`
          );
        }
      } catch (error) {
        errorCount++;
        console.error(`‚ùå L·ªói c·∫≠p nh·∫≠t document ID ${row.id}:`, error.message);
      }
    }

    console.log(`\nüìà K·∫øt qu·∫£:`);
    console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t: ${updatedCount} b·∫£n ghi`);
    console.log(`‚ùå L·ªói: ${errorCount} b·∫£n ghi`);
    console.log(`üìä T·ªïng c·ªông: ${result.rows.length} b·∫£n ghi`);
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t status:", error);
  } finally {
    await pool.end();
  }
}

// Ch·∫°y script
fixLegalDocumentsStatus();
