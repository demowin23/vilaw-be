const { pool } = require("../config/database");

async function updateChatSchema() {
  try {
    console.log("üîÑ ƒêang c·∫≠p nh·∫≠t schema chat...");

    // C·∫≠p nh·∫≠t b·∫£ng conversations ƒë·ªÉ cho ph√©p lawyer_id NULL
    const updateConversationsTable = `
      ALTER TABLE conversations 
      ALTER COLUMN lawyer_id DROP NOT NULL;
    `;

    // Th√™m comment ƒë·ªÉ gi·∫£i th√≠ch
    const addComment = `
      COMMENT ON COLUMN conversations.lawyer_id IS 'NULL cho cu·ªôc tr√≤ chuy·ªán chung v·ªõi t·∫•t c·∫£ lu·∫≠t s∆∞';
    `;

    // Th·ª±c thi c√°c c√¢u l·ªánh
    await pool.query(updateConversationsTable);
    console.log("‚úÖ ƒê√£ c·∫≠p nh·∫≠t b·∫£ng conversations cho ph√©p lawyer_id NULL");

    try {
      await pool.query(addComment);
      console.log("‚úÖ ƒê√£ th√™m comment cho b·∫£ng conversations");
    } catch (error) {
      console.log("‚ö†Ô∏è Kh√¥ng th·ªÉ th√™m comment (c√≥ th·ªÉ PostgreSQL kh√¥ng h·ªó tr·ª£)");
    }

    console.log("üéâ C·∫≠p nh·∫≠t schema chat th√†nh c√¥ng!");
    console.log("üìù L∆∞u √Ω: H·ªá th·ªëng chat m·ªõi cho ph√©p:");
    console.log(
      "   - Ng∆∞·ªùi d√πng t·∫°o cu·ªôc tr√≤ chuy·ªán chung (kh√¥ng ch·ªçn lu·∫≠t s∆∞ c·ª• th·ªÉ)"
    );
    console.log("   - Tin nh·∫Øn t·ª± ƒë·ªông g·ª≠i ƒë·∫øn t·∫•t c·∫£ lu·∫≠t s∆∞");
    console.log("   - B·∫•t k·ª≥ lu·∫≠t s∆∞ n√†o c≈©ng c√≥ th·ªÉ tr·∫£ l·ªùi");
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t schema chat:", error);
    throw error;
  } finally {
    await pool.end();
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  updateChatSchema()
    .then(() => {
      console.log("‚úÖ Ho√†n th√†nh c·∫≠p nh·∫≠t schema chat");
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå L·ªói:", error);
      process.exit(1);
    });
}

module.exports = updateChatSchema;
