const { pool } = require("../config/database");

const updateLegalDocumentsTable = async () => {
  try {
    console.log("üîß C·∫≠p nh·∫≠t b·∫£ng legal_documents...");

    const client = await pool.connect();

    // X√≥a b·∫£ng legal_documents c≈© n·∫øu t·ªìn t·∫°i
    console.log("üóëÔ∏è X√≥a b·∫£ng legal_documents c≈©...");
    await client.query(`
      DROP TABLE IF EXISTS legal_documents CASCADE
    `);

    // T·∫°o b·∫£ng legal_documents m·ªõi v·ªõi c·∫•u tr√∫c ph√π h·ª£p v·ªõi form
    console.log("üî® T·∫°o b·∫£ng legal_documents m·ªõi...");
    await client.query(`
      CREATE TABLE legal_documents (
        id SERIAL PRIMARY KEY,
        title VARCHAR(300) NOT NULL,
        document_number VARCHAR(100) UNIQUE NOT NULL,
        document_type VARCHAR(50) NOT NULL,
        issuing_authority VARCHAR(200) NOT NULL,
        issued_date DATE NOT NULL,
        effective_date DATE,
        expiry_date DATE,
        status VARCHAR(50) NOT NULL,
        tags TEXT[],
        file_url VARCHAR(500),
        file_size INTEGER DEFAULT 0,
        download_count INTEGER DEFAULT 0,
        uploaded_by INTEGER REFERENCES users(id),
        is_important BOOLEAN DEFAULT false,
        is_active BOOLEAN DEFAULT true,
        ts_create TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        ts_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);

    // T·∫°o indexes
    console.log("üìä T·∫°o indexes...");
    await client.query(`
      CREATE INDEX idx_documents_title ON legal_documents(title);
      CREATE INDEX idx_documents_number ON legal_documents(document_number);
      CREATE INDEX idx_documents_type ON legal_documents(document_type);
      CREATE INDEX idx_documents_status ON legal_documents(status);
      CREATE INDEX idx_documents_authority ON legal_documents(issuing_authority);
      CREATE INDEX idx_documents_issued_date ON legal_documents(issued_date);
      CREATE INDEX idx_documents_effective_date ON legal_documents(effective_date);
      CREATE INDEX idx_documents_important ON legal_documents(is_important);
      CREATE INDEX idx_documents_active ON legal_documents(is_active);
      CREATE INDEX idx_documents_uploaded_by ON legal_documents(uploaded_by);
      CREATE INDEX idx_documents_tags ON legal_documents USING GIN(tags);
      CREATE INDEX idx_documents_ts_create ON legal_documents(ts_create);
    `);

    client.release();

    console.log("‚úÖ Ho√†n th√†nh c·∫≠p nh·∫≠t b·∫£ng legal_documents!");
    console.log("üìã B·∫£ng ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi c√°c tr∆∞·ªùng:");
    console.log("   - id: SERIAL PRIMARY KEY");
    console.log("   - title: VARCHAR(300) NOT NULL (T√™n vƒÉn b·∫£n)");
    console.log("   - document_number: VARCHAR(100) UNIQUE NOT NULL (S·ªë hi·ªáu)");
    console.log("   - document_type: VARCHAR(50) NOT NULL (Lo·∫°i vƒÉn b·∫£n)");
    console.log(
      "   - issuing_authority: VARCHAR(200) NOT NULL (C∆° quan ban h√†nh)"
    );
    console.log("   - issued_date: DATE NOT NULL (Ng√†y ban h√†nh)");
    console.log("   - effective_date: DATE NOT NULL (Ng√†y c√≥ hi·ªáu l·ª±c)");
    console.log("   - expiry_date: DATE (Ng√†y h·∫øt hi·ªáu l·ª±c)");
    console.log("   - status: VARCHAR(50) NOT NULL (Tr·∫°ng th√°i)");
    console.log("   - tags: TEXT[] (Tags ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y)");
    console.log("   - file_url: VARCHAR(500) (ƒê∆∞·ªùng d·∫´n file Word)");
    console.log("   - file_size: INTEGER DEFAULT 0 (K√≠ch th∆∞·ªõc file)");
    console.log("   - download_count: INTEGER DEFAULT 0 (S·ªë l∆∞·ª£t download)");
    console.log("   - uploaded_by: INTEGER REFERENCES users(id)");
    console.log(
      "   - is_important: BOOLEAN DEFAULT false (VƒÉn b·∫£n quan tr·ªçng)"
    );
    console.log("   - is_active: BOOLEAN DEFAULT true");
    console.log("   - ts_create: TIMESTAMP DEFAULT CURRENT_TIMESTAMP");
    console.log("   - ts_update: TIMESTAMP DEFAULT CURRENT_TIMESTAMP");
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t b·∫£ng legal_documents:", error);
  } finally {
    await pool.end();
  }
};

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  updateLegalDocumentsTable();
}

module.exports = updateLegalDocumentsTable;
