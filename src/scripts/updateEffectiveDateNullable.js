const { pool } = require("../config/database");

const updateEffectiveDateNullable = async () => {
  try {
    console.log("üîß C·∫≠p nh·∫≠t c·ªôt effective_date th√†nh nullable...");

    const client = await pool.connect();

    // Ki·ªÉm tra xem c·ªôt effective_date c√≥ t·ªìn t·∫°i kh√¥ng
    const checkColumnQuery = `
      SELECT column_name, is_nullable, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'legal_documents' 
      AND column_name = 'effective_date'
    `;

    const columnResult = await client.query(checkColumnQuery);

    if (columnResult.rows.length === 0) {
      console.log(
        "‚ùå C·ªôt effective_date kh√¥ng t·ªìn t·∫°i trong b·∫£ng legal_documents"
      );
      client.release();
      return;
    }

    const column = columnResult.rows[0];
    console.log(`üìã Th√¥ng tin c·ªôt effective_date hi·ªán t·∫°i:`);
    console.log(`   - T√™n: ${column.column_name}`);
    console.log(`   - Nullable: ${column.is_nullable}`);
    console.log(`   - Ki·ªÉu d·ªØ li·ªáu: ${column.data_type}`);

    // N·∫øu c·ªôt ƒë√£ nullable th√¨ kh√¥ng c·∫ßn c·∫≠p nh·∫≠t
    if (column.is_nullable === "YES") {
      console.log("‚úÖ C·ªôt effective_date ƒë√£ nullable, kh√¥ng c·∫ßn c·∫≠p nh·∫≠t");
      client.release();
      return;
    }

    // C·∫≠p nh·∫≠t c·ªôt th√†nh nullable
    console.log("üîÑ ƒêang c·∫≠p nh·∫≠t c·ªôt effective_date th√†nh nullable...");
    await client.query(`
      ALTER TABLE legal_documents 
      ALTER COLUMN effective_date DROP NOT NULL
    `);

    console.log("‚úÖ ƒê√£ c·∫≠p nh·∫≠t c·ªôt effective_date th√†nh nullable");

    // Ki·ªÉm tra l·∫°i sau khi c·∫≠p nh·∫≠t
    const checkAfterQuery = `
      SELECT column_name, is_nullable, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'legal_documents' 
      AND column_name = 'effective_date'
    `;

    const afterResult = await client.query(checkAfterQuery);
    const afterColumn = afterResult.rows[0];

    console.log(`üìã Th√¥ng tin c·ªôt effective_date sau khi c·∫≠p nh·∫≠t:`);
    console.log(`   - T√™n: ${afterColumn.column_name}`);
    console.log(`   - Nullable: ${afterColumn.is_nullable}`);
    console.log(`   - Ki·ªÉu d·ªØ li·ªáu: ${afterColumn.data_type}`);

    client.release();
    console.log("üéâ Ho√†n th√†nh c·∫≠p nh·∫≠t c·ªôt effective_date!");
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t c·ªôt effective_date:", error);
    process.exit(1);
  }
};

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  updateEffectiveDateNullable()
    .then(() => {
      console.log("‚úÖ Script ho√†n th√†nh!");
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå Script th·∫•t b·∫°i:", error);
      process.exit(1);
    });
}

module.exports = { updateEffectiveDateNullable };
